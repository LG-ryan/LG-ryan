import React, { useEffect, useState } from "react";
import "./App.css";
import { getHealth, getLifecycleStage } from "./services/api";

type LifecycleResult = {
  stage:string;color:string;label:string;reason:string;advice:string;
  threshold:{vehicleType:string;yearsRange:[number,number];kmRange:[number,number]};
  meta:{version:string;notes:string};
};

export default function App(){
  // 프로필 상태
  const [avatar,setAvatar] = useState('🚙');
const [vehicleType,setVehicleType]=useState<"suv"|"sedan"|"hatchback"|"sports">("suv");
  const [years,setYears]=useState<1|3|5>(3);
  const [odometer,setOdometer]=useState(80000);
  const [displayName,setDisplayName]=useState("내 차");

  // 결과/상태
  const [backendStatus,setBackendStatus]=useState("Backend: 확인 중…");
  const [lifecycle,setLifecycle]=useState<LifecycleResult|null>(null);
  const [loadingLife,setLoadingLife]=useState(false);
  const [error,setError]=useState("");

  // 최초 로드: 로컬 프로필 복원 + 헬스 체크
  useEffect(()=>{
    try{
      const saved=localStorage.getItem("vehicleProfile");
      if(saved){
        const p=JSON.parse(saved);
        if(p.displayName) setDisplayName(p.displayName);
        if(p.vehicleType) setVehicleType(p.vehicleType);
        if(typeof p.odometer==="number") setOdometer(p.odometer);
        if(p.years) setYears(p.years);
      }
    }catch{}
    (async()=>{
      try{
        const res=await getHealth();
        setBackendStatus(`Backend: ${res.data.message}`);
      }catch{
        setBackendStatus("Backend: 연결 오류");
      }
    })();
  },[]);

  const saveProfile=()=>{
    localStorage.setItem("vehicleProfile",JSON.stringify({displayName,vehicleType,odometer,years}));
  };

  const onLifecycle=async()=>{
    setLoadingLife(true); setError(""); setLifecycle(null);
    try{
      const r=await getLifecycleStage({vehicleType,years,odometer});
      setLifecycle(r.data as LifecycleResult);
    }catch(err:any){
      setError(err?.response?.data?.error??"요청 실패");
    }finally{
      setLoadingLife(false);
    }
  };

  return (
    <div className="App">
      <header className="App-header">
        <div className="card">
          <h1>🚘 AI Car Life Manager</h1>
          <p className="subtitle">라이트 시그널 MVP</p>

          <div className="grid">
            {/* 프로필 카드 */}
            <section className="section">
              <div className="profile-card">
                <div className="avatar">🚙</div>
                <div className="profile-meta">
                  <div className="name-row">
                    <input value={displayName} onChange={(e)=>setDisplayName(e.target.value)} placeholder="차 이름(별명)" />
                    <button className="secondary" onClick={saveProfile}>저장</button>
                  </div>

                  <div style={{display:"flex",gap:8,flexWrap:"wrap"}}>
                    <span className="badge">타입</span>
                    <select value={vehicleType} onChange={(e)=>setVehicleType(e.target.value as any)}>
                      <option value="suv">SUV</option>
                      <option value="sedan">세단</option>
                      <option value="hatchback">해치백</option>
                      <option value="sports">스포츠</option>
                    </select>

                    <span className="badge">보유(년)</span>
                    <select value={years} onChange={(e)=>setYears(Number(e.target.value) as any)}>
                      <option value={1}>1</option>
                      <option value={3}>3</option>
                      <option value={5}>5</option>
                    </select>

                    <span className="badge">누적 km</span>
                    <input type="number" value={odometer} onChange={(e)=>setOdometer(Number(e.target.value))} />
                  </div>

                  <div style={{display:"flex",gap:8,flexWrap:"wrap"}}>
                    {lifecycle && <span className="badge">{lifecycle.color} {lifecycle.label}</span>}
                  </div>
                </div>
              </div>
            </section>

            {/* 액션 */}
            <section className="section">
              <h3 style={{marginTop:0}}>라이트 시그널</h3>
              <div className="actions">
                <button type="button" className="secondary" onClick={onLifecycle} disabled={loadingLife}>
                  {loadingLife?"분류 중...":"라이트 시그널 조회"}
                </button>
              </div>

              {error && <p className="error">{error}</p>}
            </section>
          </div>

          {/* 결과 카드 */}
          {lifecycle && (
            <div className="result">
              <h4 style={{marginTop:0}}>라이트 시그널</h4>
              <p style={{margin:"4px 0 10px"}}><span className="badge">{lifecycle.color} {lifecycle.label}</span></p>
              <ul>
                <li>이유: {lifecycle.reason}</li>
                <li>조언: {lifecycle.advice}</li>
                <li>기준: {lifecycle.threshold.vehicleType}, 연 {lifecycle.threshold.yearsRange[0]}~{String(lifecycle.threshold.yearsRange[1]).replace("Infinity","∞")}년 / {lifecycle.threshold.kmRange[0].toLocaleString()}~{String(lifecycle.threshold.kmRange[1]).replace("Infinity","∞")}</li>
              </ul>
              <small>{lifecycle.meta.version} · {lifecycle.meta.notes}</small>
            </div>
          )}

          {/* 하단(작게) 백엔드 상태 */}
          <div className="app-footer">{backendStatus}</div>
        </div>
      </header>
    </div>
  );
}
