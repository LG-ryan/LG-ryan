// frontend/src/components/AIAnalysis.tsx
// AI Ï¢ÖÌï© Î∂ÑÏÑù + Ïò§ÎÑà ÎπÑÍµê + ÏòàÏ∏° Í∑ºÍ±∞

import React from "react";
import { VehicleDashboard } from "../types/vehicle";
import { EncarColors, EncarFonts, EncarRadius, EncarShadows, EncarSpacing } from "../styles/encar-theme";
import ProgressBar from "./ProgressBar";

interface Props {
  dashboard: VehicleDashboard;
}

const nf = new Intl.NumberFormat("ko-KR");

export default function AIAnalysis({ dashboard }: Props) {
  const { vehicle, lifecycle, timing } = dashboard;
  const [expandedCards, setExpandedCards] = React.useState<Set<string>>(new Set());
  
  const toggleCard = (cardId: string) => {
    const newExpanded = new Set(expandedCards);
    if (newExpanded.has(cardId)) {
      newExpanded.delete(cardId);
    } else {
      newExpanded.add(cardId);
    }
    setExpandedCards(newExpanded);
  };
  
  // AI Î∂ÑÏÑù Ï†êÏàò Í≥ÑÏÇ∞ (Îçî Íµ¨Ï≤¥Ï†ÅÏù∏ Í∏∞Ï§Ä)
  const calculateScores = () => {
    let conditionScore = 100;
    let maintenanceScore = 100;
    
    // 1. ÏÇ¨Í≥† Ïù¥Î†• (-10 ~ -30Ï†ê)
    if (vehicle.accident === "major") conditionScore -= 30;
    else if (vehicle.accident === "minor") conditionScore -= 10;
    
    // 2. Ï£ºÌñâÍ±∞Î¶¨ (Ïó∞ÌèâÍ∑† 15,000km Í∏∞Ï§Ä, -5 ~ +5Ï†ê)
    const avgKmPerYear = vehicle.currentMileage / lifecycle.yearsOwned;
    if (avgKmPerYear > 25000) conditionScore -= 15;
    else if (avgKmPerYear > 20000) conditionScore -= 10;
    else if (avgKmPerYear > 18000) conditionScore -= 5;
    else if (avgKmPerYear < 10000) conditionScore += 5;
    else if (avgKmPerYear < 8000) conditionScore += 8;
    
    // 3. Ïô∏Í¥Ä ÏÉÅÌÉú (-3 ~ -9Ï†ê)
    if (vehicle.exterior) {
      if (vehicle.exterior.front === "major") conditionScore -= 5;
      else if (vehicle.exterior.front === "minor") conditionScore -= 2;
      
      if (vehicle.exterior.side === "major") conditionScore -= 5;
      else if (vehicle.exterior.side === "minor") conditionScore -= 2;
      
      if (vehicle.exterior.rear === "major") conditionScore -= 5;
      else if (vehicle.exterior.rear === "minor") conditionScore -= 2;
    }
    
    // 4. ÌÉÄÏù¥Ïñ¥ ÏÉÅÌÉú (-2 ~ -8Ï†ê)
    if (vehicle.tires) {
      const tireArray = [vehicle.tires.frontLeft, vehicle.tires.frontRight, vehicle.tires.rearLeft, vehicle.tires.rearRight];
      const replaceTires = tireArray.filter(t => t === "replace").length;
      conditionScore -= replaceTires * 2;
    }
    
    // 5. ÏÉùÏï†Ï£ºÍ∏∞ Îã®Í≥Ñ (-10 ~ +10Ï†ê)
    if (lifecycle.stage === "Trust") conditionScore += 10;
    else if (lifecycle.stage === "Keep") conditionScore += 5;
    else if (lifecycle.stage === "Care") conditionScore -= 5;
    else if (lifecycle.stage === "Next") conditionScore -= 10;
    
    // 6. ÌÇ§ Î≥¥Ïú† ÏÉÅÌÉú (-5Ï†ê)
    if (vehicle.keys === "one") conditionScore -= 5;
    
    // 7. Î¶¨Ïä§/Ìï†Î∂Ä (-3Ï†ê)
    if (vehicle.lease === "active") conditionScore -= 3;
    
    // === Í¥ÄÎ¶¨ ÏÉÅÌÉú Ï†êÏàò (Î≥ÑÎèÑ) ===
    // Í∏∞Î≥∏ 100Ï†êÏóêÏÑú Í∞êÏ†ê
    
    // 1. ÏÇ¨Í≥† Ïù¥Î†•
    if (vehicle.accident === "major") maintenanceScore -= 40;
    else if (vehicle.accident === "minor") maintenanceScore -= 20;
    
    // 2. Ïô∏Í¥Ä Í¥ÄÎ¶¨
    if (vehicle.exterior) {
      const exteriorIssues = [vehicle.exterior.front, vehicle.exterior.side, vehicle.exterior.rear]
        .filter(e => e === "major" || e === "minor").length;
      maintenanceScore -= exteriorIssues * 5;
    }
    
    // 3. ÌÉÄÏù¥Ïñ¥ Í¥ÄÎ¶¨
    if (vehicle.tires) {
      const tireArray = [vehicle.tires.frontLeft, vehicle.tires.frontRight, vehicle.tires.rearLeft, vehicle.tires.rearRight];
      const replaceTires = tireArray.filter(t => t === "replace").length;
      maintenanceScore -= replaceTires * 8;
    }
    
    // 4. Ï£ºÌñâÍ±∞Î¶¨ Í¥ÄÎ¶¨ (Í≥ºÎèÑÌïú Ï£ºÌñâÏùÄ Í¥ÄÎ¶¨ Î∂ÄÎã¥)
    if (avgKmPerYear > 25000) maintenanceScore -= 15;
    else if (avgKmPerYear > 20000) maintenanceScore -= 10;
    else if (avgKmPerYear < 12000) maintenanceScore += 5; // Ï†ÅÏ†ï Ï£ºÌñâÏùÄ Í∞ÄÏ†ê
    
    const valueRetention = (timing.nowValue / vehicle.purchasePrice) * 100;
    
    // Í¥ÄÎ¶¨ ÏÉÅÌÉú Î†àÏù¥Î∏î
    let maintenanceLabel = "Ïö∞Ïàò";
    if (maintenanceScore >= 90) maintenanceLabel = "ÏµúÏö∞Ïàò";
    else if (maintenanceScore >= 80) maintenanceLabel = "Ïö∞Ïàò";
    else if (maintenanceScore >= 70) maintenanceLabel = "ÏñëÌò∏";
    else if (maintenanceScore >= 60) maintenanceLabel = "Î≥¥ÌÜµ";
    else maintenanceLabel = "Í∞úÏÑ†ÌïÑÏöî";
    
    return {
      condition: Math.max(0, Math.min(100, conditionScore)),
      maintenance: Math.max(0, Math.min(100, maintenanceScore)),
      maintenanceLabel,
      valueRetention: Math.round(valueRetention),
      ranking: conditionScore >= 85 ? "ÏÉÅÏúÑ 15%" : conditionScore >= 70 ? "ÏÉÅÏúÑ 30%" : "ÏÉÅÏúÑ 50%",
      avgKmPerYear: Math.round(avgKmPerYear),
    };
  };
  
  const scores = calculateScores();
  
  // Í∞ôÏùÄ Î™®Îç∏ Ïò§ÎÑà Îç∞Ïù¥ÌÑ∞ (Î™©ÏóÖ)
  const ownerStats = {
    totalOwners: 1234,
    avgHoldYears: 3.2,
    sellRatio: {
      year3: 68,
      year5: 85,
      year8: 95,
    },
    avgSellPrice: Math.round(timing.nowValue * 1.05),
    encarBonus: 5, // ÏóîÏπ¥Î°ú ÌåêÎß§ Ïãú ÌîÑÎ¶¨ÎØ∏ÏóÑ
  };
  
  // ÏòàÏ∏° Í∑ºÍ±∞ (Îçî Íµ¨Ï≤¥Ï†ÅÏúºÎ°ú)
  const getPredictionReason = () => {
    const reasons = [];
    
    // 1. Í∞êÍ∞ÄÏú® Î∂ÑÏÑù (Ïã§Ï†ú Ï∞®Îüâ Îç∞Ïù¥ÌÑ∞ Í∏∞Î∞ò)
    const currentMonthlyRate = lifecycle.stage === "Trust" ? 0.8 :
                                lifecycle.stage === "Keep" ? 1.0 :
                                lifecycle.stage === "Care" ? 1.5 : 2.0; // Îã®Í≥ÑÎ≥Ñ Ï∞®Îì±
    const futureMonthlyRate = lifecycle.stage === "Trust" ? 0.8 :
                               lifecycle.stage === "Keep" ? 1.2 :
                               lifecycle.stage === "Care" ? 1.8 : 2.5;
    
    const currentValue = timing.nowValue;
    const lossIn3Months = Math.round(currentValue * futureMonthlyRate * 3 / 100);
    const lossIn6Months = Math.round(currentValue * futureMonthlyRate * 6 / 100);
    
    reasons.push({
      title: "Í∞êÍ∞ÄÏú® Î∂ÑÏÑù",
      icon: "üìâ",
      details: [
        `ÌòÑÏû¨ ${vehicle.year}ÎÖÑÏãù ${vehicle.model}: Ïõî ${currentMonthlyRate}% Í∞êÍ∞Ä Ï§ë`,
        `${lifecycle.stage === "Next" ? "8ÎÖÑÏ∞® Ïù¥ÌõÑ" : lifecycle.stage === "Care" ? "5ÎÖÑÏ∞® Ïù¥ÌõÑ" : "Ïã†Ï∞®Í∞ê Í∏∞Í∞Ñ"} ‚Üí Ïõî ${futureMonthlyRate}% ÏòàÏÉÅ`,
        `‚Üí 6Í∞úÏõî Îçî Î≥¥Ïú† Ïãú ÏïΩ ${nf.format(Math.round(lossIn6Months / 10000))}ÎßåÏõê Í∞êÍ∞Ä`,
        `‚Üí ÌòÑÏû¨ ÏãúÏÑ∏ ${nf.format(Math.round(currentValue / 10000))}ÎßåÏõê ‚Üí ${nf.format(Math.round((currentValue - lossIn6Months) / 10000))}ÎßåÏõê`,
      ],
    });
    
    // 2. ÏãúÏû• ÏàòÏöî Î∂ÑÏÑù (Îçî Íµ¨Ï≤¥Ï†Å)
    const currentMonth = new Date().getMonth() + 1;
    const isSummerOrWinter = currentMonth >= 11 || currentMonth <= 2 || (currentMonth >= 5 && currentMonth <= 8);
    
    // Ï∞®Ï¢ÖÎ≥Ñ ÏàòÏöî Î∂ÑÏÑù
    let demandAnalysis = "";
    if (vehicle.vehicleType === "suv") {
      demandAnalysis = isSummerOrWinter ? "SUVÎäî Í≤®Ïö∏/Ïó¨Î¶Ñ Î†àÏ†Ä ÏàòÏöî Ï¶ùÍ∞Ä" : "SUVÎäî ÏÇ¨Í≥ÑÏ†à ÏàòÏöî ÏïàÏ†ïÏ†Å";
    } else if (vehicle.vehicleType === "sedan") {
      demandAnalysis = "ÏÑ∏Îã®ÏùÄ Ïó∞Ï§ë ÏïàÏ†ïÏ†Å ÏàòÏöî";
    } else {
      demandAnalysis = isSummerOrWinter ? "ÏÑ±ÏàòÍ∏∞ ÏßÑÏûÖ" : "ÌèâÍ∑† ÏàòÏöî";
    }
    
    reasons.push({
      title: "ÏãúÏû• ÏàòÏöî Î∂ÑÏÑù",
      icon: "üìä",
      details: [
        `${vehicle.model} (${vehicle.vehicleType.toUpperCase()}): ${demandAnalysis}`,
        `ÌòÑÏû¨(${currentMonth}Ïõî): ${isSummerOrWinter ? "ÏàòÏöî ‚Üë ÏãúÍ∏∞" : "ÌèâÍ∑† ÏàòÏöî ÏãúÍ∏∞"}`,
        `Í∞ôÏùÄ Î™®Îç∏ ÏµúÍ∑º 1Í∞úÏõî Í±∞ÎûòÎüâ: 1,234Í±¥ (Ï†ÑÏõî ÎåÄÎπÑ ${isSummerOrWinter ? "+12%" : "-3%"})`,
        `‚Üí ${isSummerOrWinter ? "ÏßÄÍ∏àÏù¥ ÎÜíÏùÄ Í∞ÄÍ≤© Î∞õÏùÑ ÏãúÍ∏∞ÏòàÏöî" : "Îã§Ïùå ÏÑ±ÏàòÍ∏∞(11Ïõî~2Ïõî) ÎåÄÍ∏∞ÎèÑ Ï†ÑÎûµ"}`,
      ],
    });
    
    // 3. Ïú†ÏÇ¨ Ï∞®Îüâ ÌåêÎß§ Îç∞Ïù¥ÌÑ∞ (Îçî Íµ¨Ï≤¥Ï†Å)
    const similarVehicles = 567; // Î™©ÏóÖ
    const avgPrice = Math.round(timing.nowValue / 10000);
    const priceRange = { min: Math.round(avgPrice * 0.9), max: Math.round(avgPrice * 1.15) };
    
    reasons.push({
      title: "Ïú†ÏÇ¨ Ï∞®Îüâ ÌåêÎß§ Îç∞Ïù¥ÌÑ∞",
      icon: "üîç",
      details: [
        `${vehicle.year}ÎÖÑÏãù ${vehicle.model} ${vehicle.trim} Í±∞Îûò ${similarVehicles}Í±¥ Î∂ÑÏÑù`,
        `ÌèâÍ∑† ÌåêÎß§Í∞Ä: ${nf.format(avgPrice)}ÎßåÏõê (Î≤îÏúÑ: ${nf.format(priceRange.min)}~${nf.format(priceRange.max)}ÎßåÏõê)`,
        `ÏóîÏπ¥ ÎπÑÍµêÍ≤¨Ï†Å ÌèâÍ∑†: ${nf.format(Math.round(avgPrice * 1.05))}ÎßåÏõê (+${ownerStats.encarBonus}%)`,
        `ÏùºÎ∞ò ÎîúÎü¨ ÌèâÍ∑†: ${nf.format(Math.round(avgPrice * 0.97))}ÎßåÏõê (-3%)`,
      ],
    });
    
    // 4. Ï∞®Îüâ Ïª®ÎîîÏÖò ÌèâÍ∞Ä (Ïã†Í∑ú)
    const conditionImpact = [];
    if (vehicle.accident && vehicle.accident !== "none") {
      conditionImpact.push(`ÏÇ¨Í≥†Ïù¥Î†• ${vehicle.accident === "major" ? "ÎåÄ" : "ÏÜå"}: -${vehicle.accident === "major" ? 15 : 5}%`);
    }
    if (scores.avgKmPerYear > 20000) {
      conditionImpact.push(`Í≥ºÎã§ Ï£ºÌñâ(Ïó∞ ${nf.format(scores.avgKmPerYear)}km): -3%`);
    } else if (scores.avgKmPerYear < 12000) {
      conditionImpact.push(`Ï†ÄÏ£ºÌñâ(Ïó∞ ${nf.format(scores.avgKmPerYear)}km): +2%`);
    }
    if (vehicle.keys === "one") {
      conditionImpact.push("ÌÇ§ 1Í∞ú: -2%");
    }
    if (vehicle.lease === "active") {
      conditionImpact.push("Î¶¨Ïä§/Ìï†Î∂Ä ÏûîÍ∏à: -3%");
    }
    
    if (conditionImpact.length > 0) {
      reasons.push({
        title: "Ï∞®Îüâ Ïª®ÎîîÏÖò ÌèâÍ∞Ä",
        icon: "üîß",
        details: [
          `Í∏∞Î≥∏ ÏãúÏÑ∏ ${nf.format(avgPrice)}ÎßåÏõê Í∏∞Ï§Ä`,
          ...conditionImpact,
          `‚Üí Ï°∞Ï†ï ÌõÑ ÏòàÏÉÅ ÏãúÏÑ∏: ${nf.format(Math.round(timing.nowValue / 10000))}ÎßåÏõê`,
        ],
      });
    }
    
    return reasons;
  };
  
  const predictionReasons = getPredictionReason();
  
  // ÏÉÅÏÑ∏ Ïù∏ÏÇ¨Ïù¥Ìä∏ ÏÉùÏÑ±
  const getDetailedInsights = () => {
    // Ï∞®Îüâ ÌäπÌôî Í∞ÄÏù¥Îìú ÏÉùÏÑ±
    const getVehicleSpecificGuide = () => {
      const age = new Date().getFullYear() - vehicle.year;
      const model = vehicle.model;
      
      if (model.includes("Ìé†Î¶¨ÏÑ∏Ïù¥Îìú") || model.includes("Ìå∞Î¶¨ÏÑ∏Ïù¥Îìú")) {
        if (age <= 3) {
          return "2021-2023ÎÖÑÏãù Ìé†Î¶¨ÏÑ∏Ïù¥ÎìúÎäî ÌÉÄÏù¥Ïñ¥ ÏàòÎ™ÖÏù¥ ÌïµÏã¨Ïù¥ÏóêÏöî. SUV ÌäπÏÑ±ÏÉÅ ÌÉÄÏù¥Ïñ¥Í∞Ä Îπ®Î¶¨ Îã≥ÏúºÎãà 4ÎßåkmÎßàÎã§ Ï≤¥ÌÅ¨ÌïòÏÑ∏Ïöî.";
        } else if (age <= 5) {
          return "5ÎÖÑÏ∞® Ìé†Î¶¨ÏÑ∏Ïù¥ÎìúÎäî Î∞∞ÌÑ∞Î¶¨ÏôÄ Î∏åÎ†àÏù¥ÌÅ¨ Ìå®ÎìúÎ•º Ï£ºÏùòÌïòÏÑ∏Ïöî. Î¨¥Í≤åÍ∞Ä Î¨¥Í±∞Ïõå ÏÜåÎ™®Í∞Ä Îπ†Î¶ÖÎãàÎã§.";
        } else {
          return "6ÎÖÑ Ïù¥ÏÉÅ Ìé†Î¶¨ÏÑ∏Ïù¥ÎìúÎäî ÏóîÏßÑ ÎßàÏö¥Ìä∏ÏôÄ ÏÑúÏä§ÌéúÏÖòÏùÑ Ï≤¥ÌÅ¨ÌïòÏÑ∏Ïöî. Ï†ïÎπÑ Ïù¥Î†•Ïù¥ ÏãúÏÑ∏Ïóê ÌÅ∞ ÏòÅÌñ•ÏùÑ Ï§çÎãàÎã§.";
        }
      } else if (vehicle.vehicleType === "suv") {
        return `SUVÎäî ÌÉÄÏù¥Ïñ¥ÏôÄ Î∏åÎ†àÏù¥ÌÅ¨ Í¥ÄÎ¶¨Í∞Ä ÏãúÏÑ∏Ïóê ÌÅ∞ ÏòÅÌñ•ÏùÑ Ï§çÎãàÎã§. ${age}ÎÖÑÏ∞® Í∏∞Ï§Ä ${age <= 3 ? "ÏòàÎ∞© Ï†ïÎπÑ" : age <= 5 ? "Ï£ºÏöî Î∂ÄÌíà ÍµêÏ≤¥" : "Ï†ÑÎ¨∏ Ï†êÍ≤Ä"}Í∞Ä ÌïÑÏöîÌï¥Ïöî.`;
      } else if (vehicle.vehicleType === "sedan") {
        return `ÏÑ∏Îã®ÏùÄ Ïô∏Í¥ÄÍ≥º ÎÇ¥Î∂Ä Í¥ÄÎ¶¨Í∞Ä Ï§ëÏöîÌï©ÎãàÎã§. ${age}ÎÖÑÏ∞® Í∏∞Ï§Ä ${age <= 3 ? "Ï†ïÍ∏∞ ÏÑ∏Ï∞®/ÏΩîÌåÖ" : age <= 5 ? "Ïã§ÎÇ¥ Í¥ÄÎ¶¨" : "Ï†ÑÏ≤¥ Î¶¨ÌîÑÎ†àÏãú"}Î•º Ï∂îÏ≤úÎìúÎ†§Ïöî.`;
      } else {
        return `${age}ÎÖÑÏ∞® Ï∞®ÎüâÏùÄ ${age <= 3 ? "ÏòàÎ∞© Ï†ïÎπÑ ÏúÑÏ£ºÎ°ú" : age <= 5 ? "ÏÜåÎ™®Ìíà ÍµêÏ≤¥ ÏãúÍ∏∞Ïù¥Îãà" : "Ï†ÑÎ¨∏Í∞Ä Ï†êÍ≤ÄÏùÑ ÌÜµÌï¥"} Í¥ÄÎ¶¨ÌïòÏãúÎ©¥ Í∞ÄÏπòÎ•º Ïú†ÏßÄÌï† Ïàò ÏûàÏñ¥Ïöî.`;
      }
    };
    
    return {
      condition: {
        summary: `Î¨ºÎ¶¨Ï†Å ÏÉÅÌÉúÎ•º 7Í∞ÄÏßÄ Í∏∞Ï§ÄÏúºÎ°ú ÌèâÍ∞ÄÌñàÏñ¥Ïöî`,
        categories: [
          {
            name: "ÏÇ¨Í≥† Ïù¥Î†•",
            score: vehicle.accident === "none" ? 100 : vehicle.accident === "minor" ? 90 : 70,
            impact: vehicle.accident === "none" ? 0 : vehicle.accident === "minor" ? -10 : -30,
            status: vehicle.accident === "none" ? "ÏôÑÎ≤Ω" : vehicle.accident === "minor" ? "ÏñëÌò∏" : "Ï£ºÏùò",
            detail: vehicle.accident === "none" ? "Î¨¥ÏÇ¨Í≥† Ï∞®ÎüâÏúºÎ°ú ÏµúÏÉÅÍ∏âÏûÖÎãàÎã§" : 
                    vehicle.accident === "minor" ? "ÏÜåÏÜê Ïù¥Î†•Ïù¥ ÏûàÏúºÎÇò ÌÅ∞ Î¨∏Ï†ú ÏóÜÏñ¥Ïöî" : 
                    "ÎåÄÏÜê Ïù¥Î†•Ïù¥ ÏãúÏÑ∏Ïóê ÏòÅÌñ•ÏùÑ Ï§Ñ Ïàò ÏûàÏñ¥Ïöî",
            howToImprove: vehicle.accident === "none" ? "ÌòÑÏû¨ ÏÉÅÌÉú Ïú†ÏßÄ (Î¨¥ÏÇ¨Í≥† Ï¶ùÎ™ÖÏÑú Ï§ÄÎπÑ)" : 
                          vehicle.accident === "minor" ? "Ï†ïÎπÑ Ïù¥Î†•ÏÑúÎ°ú Ìà¨Î™ÖÌïòÍ≤å Í≥µÍ∞úÌïòÎ©¥ Ïã†Î¢∞ÎèÑ ‚Üë" : 
                          "ÏóîÏπ¥ÏßÑÎã®ÏúºÎ°ú Ï†ïÌôïÌïú ÏÉÅÌÉú ÌôïÏù∏ ÌõÑ ÌåêÎß§",
            improvable: false,
          },
          {
            name: "Ï£ºÌñâÍ±∞Î¶¨",
            score: scores.avgKmPerYear <= 12000 ? 100 : scores.avgKmPerYear <= 18000 ? 90 : scores.avgKmPerYear <= 25000 ? 80 : 70,
            impact: scores.avgKmPerYear > 25000 ? -15 : scores.avgKmPerYear > 20000 ? -10 : scores.avgKmPerYear < 10000 ? +5 : 0,
            status: scores.avgKmPerYear <= 12000 ? "Ïö∞Ïàò" : scores.avgKmPerYear <= 18000 ? "ÏñëÌò∏" : scores.avgKmPerYear <= 25000 ? "Î≥¥ÌÜµ" : "Í≥ºÎã§",
            detail: `Ïó∞ÌèâÍ∑† ${nf.format(scores.avgKmPerYear)}km (Ï†ÅÏ†ï 12,000-15,000km)`,
            howToImprove: scores.avgKmPerYear > 20000 ? "Ï£ºÌñâÍ±∞Î¶¨Îäî Ï§ÑÏùº Ïàò ÏóÜÏßÄÎßå, Ï†ïÍ∏∞ Ï†ïÎπÑ Ïù¥Î†•ÏúºÎ°ú Ïã†Î¢∞ÎèÑÎ•º ÎÜíÏù¥ÏÑ∏Ïöî" : 
                          scores.avgKmPerYear < 10000 ? "Ï†ÄÏ£ºÌñâ Ï∞®ÎüâÏùÄ ÌÅ∞ Ïû•Ï†ê! ÌåêÎß§ Ïãú Ï†ÅÍ∑π Ïñ¥ÌïÑÌïòÏÑ∏Ïöî" : 
                          "Ï†ÅÏ†ï Ï£ºÌñâÍ±∞Î¶¨ÏûÖÎãàÎã§. ÌòÑÏû¨ Í¥ÄÎ¶¨ ÏàòÏ§Ä Ïú†ÏßÄÌïòÏÑ∏Ïöî",
            improvable: false,
          },
          {
            name: "Ïô∏Í¥Ä Ïª®ÎîîÏÖò",
            score: (() => {
              if (!vehicle.exterior) return 100;
              const issues = [vehicle.exterior.front, vehicle.exterior.side, vehicle.exterior.rear]
                .filter(e => e === "major").length;
              const minorIssues = [vehicle.exterior.front, vehicle.exterior.side, vehicle.exterior.rear]
                .filter(e => e === "minor").length;
              if (issues >= 2) return 70;
              if (issues === 1 || minorIssues >= 2) return 85;
              if (minorIssues === 1) return 95;
              return 100;
            })(),
            impact: (() => {
              if (!vehicle.exterior) return 0;
              let total = 0;
              if (vehicle.exterior.front === "major") total -= 5;
              else if (vehicle.exterior.front === "minor") total -= 2;
              if (vehicle.exterior.side === "major") total -= 5;
              else if (vehicle.exterior.side === "minor") total -= 2;
              if (vehicle.exterior.rear === "major") total -= 5;
              else if (vehicle.exterior.rear === "minor") total -= 2;
              return total;
            })(),
            status: !vehicle.exterior ? "Ï†ïÎ≥¥ÏóÜÏùå" :
                    [vehicle.exterior.front, vehicle.exterior.side, vehicle.exterior.rear].every(e => e === "good") ? "ÏôÑÎ≤Ω" :
                    [vehicle.exterior.front, vehicle.exterior.side, vehicle.exterior.rear].some(e => e === "major") ? "Ï£ºÏùò" : "ÏñëÌò∏",
            detail: vehicle.exterior ? 
              `ÏïûÎ©¥ ${vehicle.exterior.front === "good" ? "‚úì" : vehicle.exterior.front === "minor" ? "‚ñ≥" : "‚úó"} ¬∑ ÏòÜÎ©¥ ${vehicle.exterior.side === "good" ? "‚úì" : vehicle.exterior.side === "minor" ? "‚ñ≥" : "‚úó"} ¬∑ Îí∑Î©¥ ${vehicle.exterior.rear === "good" ? "‚úì" : vehicle.exterior.rear === "minor" ? "‚ñ≥" : "‚úó"}` 
              : "Îì±Î°ù Ï†ïÎ≥¥ ÏóÜÏùå",
            howToImprove: vehicle.exterior && [vehicle.exterior.front, vehicle.exterior.side, vehicle.exterior.rear].some(e => e !== "good") ?
              "ÏóîÏπ¥ Ï†úÌú¥ ÌåêÍ∏à/ÎèÑÏÉâ ÏóÖÏ≤¥ÏóêÏÑú ÏàòÎ¶¨ÌïòÎ©¥ 5-10Ï†ê Ìñ•ÏÉÅ Í∞ÄÎä• (ÎπÑÏö© 30-80ÎßåÏõê)" :
              "ÌòÑÏû¨ ÏôÑÎ≤ΩÌïú ÏÉÅÌÉú! Ï£ºÍ∏∞Ï†Å ÏÑ∏Ï∞®ÏôÄ ÏôÅÏä§ ÏΩîÌåÖÏúºÎ°ú Ïú†ÏßÄÌïòÏÑ∏Ïöî",
            improvable: vehicle.exterior ? [vehicle.exterior.front, vehicle.exterior.side, vehicle.exterior.rear].some(e => e !== "good") : false,
          },
          {
            name: "ÌÉÄÏù¥Ïñ¥ ÏÉÅÌÉú",
            score: (() => {
              if (!vehicle.tires) return 100;
              const replaceCount = [vehicle.tires.frontLeft, vehicle.tires.frontRight, vehicle.tires.rearLeft, vehicle.tires.rearRight]
                .filter(t => t === "replace").length;
              if (replaceCount >= 3) return 70;
              if (replaceCount === 2) return 85;
              if (replaceCount === 1) return 95;
              return 100;
            })(),
            impact: vehicle.tires ? -[vehicle.tires.frontLeft, vehicle.tires.frontRight, vehicle.tires.rearLeft, vehicle.tires.rearRight].filter(t => t === "replace").length * 2 : 0,
            status: !vehicle.tires ? "Ï†ïÎ≥¥ÏóÜÏùå" :
                    [vehicle.tires.frontLeft, vehicle.tires.frontRight, vehicle.tires.rearLeft, vehicle.tires.rearRight].every(t => t === "good") ? "ÏôÑÎ≤Ω" :
                    [vehicle.tires.frontLeft, vehicle.tires.frontRight, vehicle.tires.rearLeft, vehicle.tires.rearRight].filter(t => t === "replace").length >= 3 ? "ÍµêÏ≤¥ÌïÑÏöî" : "ÏñëÌò∏",
            detail: vehicle.tires ? 
              `ÍµêÏ≤¥ ÌïÑÏöî ${[vehicle.tires.frontLeft, vehicle.tires.frontRight, vehicle.tires.rearLeft, vehicle.tires.rearRight].filter(t => t === "replace").length}/4Í∞ú` 
              : "Îì±Î°ù Ï†ïÎ≥¥ ÏóÜÏùå",
            howToImprove: vehicle.tires && [vehicle.tires.frontLeft, vehicle.tires.frontRight, vehicle.tires.rearLeft, vehicle.tires.rearRight].some(t => t === "replace") ?
              `ÏóîÏπ¥ Í≤ÄÏ¶ù ÌÉÄÏù¥Ïñ¥ÏÉµÏóêÏÑú ÍµêÏ≤¥ÌïòÎ©¥ 2-8Ï†ê Ìñ•ÏÉÅ (ÌÉÄÏù¥Ïñ¥ 1Í∞úÎãπ 15-25ÎßåÏõê, 4Í∞ú ÍµêÏ≤¥ Ïãú 50-80ÎßåÏõê)` :
              "ÌòÑÏû¨ ÏñëÌò∏Ìïú ÏÉÅÌÉú! 1ÎßåkmÎßàÎã§ Í≥µÍ∏∞Ïïï Ï≤¥ÌÅ¨ÌïòÏÑ∏Ïöî",
            improvable: vehicle.tires ? [vehicle.tires.frontLeft, vehicle.tires.frontRight, vehicle.tires.rearLeft, vehicle.tires.rearRight].some(t => t === "replace") : false,
          },
          {
            name: "ÏÉùÏï†Ï£ºÍ∏∞ Îã®Í≥Ñ",
            score: lifecycle.stage === "Trust" ? 100 : lifecycle.stage === "Keep" ? 95 : lifecycle.stage === "Care" ? 85 : 75,
            impact: lifecycle.stage === "Trust" ? +10 : lifecycle.stage === "Keep" ? +5 : lifecycle.stage === "Care" ? -5 : -10,
            status: lifecycle.stage === "Trust" ? "Ïã†Ï∞®Í∞ê" : lifecycle.stage === "Keep" ? "ÏïàÏ†ïÍ∏∞" : lifecycle.stage === "Care" ? "Í¥ÄÎ¶¨Í∏∞" : "Ï†ÑÌôòÍ∏∞",
            detail: `${lifecycle.label} (${Math.round(lifecycle.yearsOwned)}ÎÖÑÏ∞®, ${nf.format(vehicle.currentMileage)}km)`,
            howToImprove: "ÏÉùÏï†Ï£ºÍ∏∞Îäî Î≥ÄÍ≤Ω Î∂àÍ∞ÄÌïòÏßÄÎßå, Ï†ïÍ∏∞ Ï†ïÎπÑÎ°ú Îã§Ïùå Îã®Í≥ÑÎ•º Îä¶Ï∂ú Ïàò ÏûàÏñ¥Ïöî",
            improvable: false,
          },
        ],
        vehicleSpecificTip: getVehicleSpecificGuide(),
        totalImprovable: (() => {
          let canImprove = 0;
          if (vehicle.exterior && [vehicle.exterior.front, vehicle.exterior.side, vehicle.exterior.rear].some(e => e !== "good")) {
            canImprove += (() => {
              let total = 0;
              if (vehicle.exterior.front !== "good") total += vehicle.exterior.front === "major" ? 5 : 2;
              if (vehicle.exterior.side !== "good") total += vehicle.exterior.side === "major" ? 5 : 2;
              if (vehicle.exterior.rear !== "good") total += vehicle.exterior.rear === "major" ? 5 : 2;
              return total;
            })();
          }
          if (vehicle.tires && [vehicle.tires.frontLeft, vehicle.tires.frontRight, vehicle.tires.rearLeft, vehicle.tires.rearRight].some(t => t === "replace")) {
            canImprove += [vehicle.tires.frontLeft, vehicle.tires.frontRight, vehicle.tires.rearLeft, vehicle.tires.rearRight].filter(t => t === "replace").length * 2;
          }
          return canImprove;
        })(),
      },
      valueRetention: {
        summary: `Íµ¨Îß§ ÌõÑ ${Math.round(lifecycle.yearsOwned)}ÎÖÑÍ∞Ñ Í∞ÄÏπò Î≥ÄÌôîÏòàÏöî`,
        breakdown: [
          { label: "Íµ¨Îß§Í∞Ä", value: vehicle.purchasePrice, detail: `${vehicle.year}ÎÖÑ ${vehicle.trim} Íµ¨Îß§` },
          { label: "ÌòÑÏû¨ ÏãúÏÑ∏", value: timing.nowValue, detail: `${nf.format(ownerStats.totalOwners)}ÎåÄ Îç∞Ïù¥ÌÑ∞ Í∏∞Ï§Ä` },
          { label: "Í∞êÍ∞ÄÏï°", value: vehicle.purchasePrice - timing.nowValue, detail: `Ïó∞ ${((1 - Math.pow(timing.nowValue / vehicle.purchasePrice, 1/lifecycle.yearsOwned)) * 100).toFixed(1)}% Í∞êÍ∞Ä` },
        ],
        comparison: `Í∞ôÏùÄ ${vehicle.model} Ïò§ÎÑà ${nf.format(ownerStats.totalOwners)}Î™Ö Ï§ë ÏÉÅÏúÑ ${scores.ranking.replace("ÏÉÅÏúÑ ", "")}Ïù¥ÏóêÏöî`,
        improvement: scores.valueRetention >= 80 ? "Ïù¥ÎØ∏ ÏµúÏÉÅÏúÑÍ∂åÏù¥ÏóêÏöî!" :
                      scores.valueRetention >= 65 ? "Ï†ïÍ∏∞ Ï†ïÎπÑÎ°ú Í∞ÄÏπòÎ•º Îçî Ïú†ÏßÄÌï† Ïàò ÏûàÏñ¥Ïöî" :
                      "ÏóîÏπ¥ ÏÖÄÌîÑÏßÑÎã®ÏúºÎ°ú Ï†ïÌôïÌïú ÏãúÏÑ∏ ÌôïÏù∏Ìï¥Î≥¥ÏÑ∏Ïöî",
      },
      marketCompetitiveness: {
        summary: `Í∞ôÏùÄ Ï°∞Í±¥ Ï∞®Îüâ ${nf.format(ownerStats.totalOwners)}ÎåÄÏôÄ ÎπÑÍµêÌñàÏñ¥Ïöî`,
        score: (() => {
          let competitiveScore = 70; // Í∏∞Î≥∏Ï†êÏàò
          // ÏÇ¨Í≥† Ïù¥Î†•ÏúºÎ°ú Í∞ÄÏ†ê/Í∞êÏ†ê
          if (vehicle.accident === "none") competitiveScore += 15;
          else if (vehicle.accident === "major") competitiveScore -= 10;
          
          // Ï£ºÌñâÍ±∞Î¶¨Î°ú Í∞ÄÏ†ê/Í∞êÏ†ê
          if (scores.avgKmPerYear < 12000) competitiveScore += 10;
          else if (scores.avgKmPerYear > 20000) competitiveScore -= 10;
          
          // Ïª®ÎîîÏÖòÏúºÎ°ú Í∞ÄÏ†ê/Í∞êÏ†ê
          if (scores.condition >= 90) competitiveScore += 5;
          else if (scores.condition < 70) competitiveScore -= 5;
          
          return Math.max(60, Math.min(100, competitiveScore));
        })(),
        ranking: scores.ranking,
        advantages: [
          ...(vehicle.accident === "none" ? ["‚úì Î¨¥ÏÇ¨Í≥† (Íµ¨Îß§Ïûê ÏÑ†Ìò∏ 1ÏàúÏúÑ)"] : []),
          ...(scores.avgKmPerYear < 15000 ? [`‚úì Ï†ÄÏ£ºÌñâ (Ïó∞ ${nf.format(scores.avgKmPerYear)}km)`] : []),
          ...(scores.condition >= 85 ? ["‚úì ÏµúÏÉÅÍ∏â Ïª®ÎîîÏÖò"] : []),
          ...(lifecycle.stage === "Trust" || lifecycle.stage === "Keep" ? ["‚úì Ïã†Ï∞®Í∞ê ÏãúÍ∏∞"] : []),
        ],
        improvements: [
          ...(vehicle.accident && vehicle.accident !== "none" ? [`‚ñ≥ ÏÇ¨Í≥† Ïù¥Î†• (Ìà¨Î™ÖÌïòÍ≤å Í≥µÍ∞ú Í∂åÏû•)`] : []),
          ...(scores.avgKmPerYear > 20000 ? [`‚ñ≥ Í≥ºÎã§ Ï£ºÌñâ (Ï†ïÎπÑ Ïù¥Î†•ÏúºÎ°ú Î≥¥ÏôÑ)`] : []),
          ...(vehicle.exterior && [vehicle.exterior.front, vehicle.exterior.side, vehicle.exterior.rear].some(e => e !== "good") ? [`‚ñ≥ Ïô∏Í¥Ä ÏàòÎ¶¨ ÌïÑÏöî (30-80ÎßåÏõê)`] : []),
          ...(vehicle.tires && [vehicle.tires.frontLeft, vehicle.tires.frontRight, vehicle.tires.rearLeft, vehicle.tires.rearRight].some(t => t === "replace") ? [`‚ñ≥ ÌÉÄÏù¥Ïñ¥ ÍµêÏ≤¥ ÌïÑÏöî (50-80ÎßåÏõê)`] : []),
        ],
        vsAverage: {
          price: `ÌèâÍ∑†Î≥¥Îã§ ${scores.valueRetention >= 70 ? "+5-8%" : "-3-5%"}`,
          sellTime: `ÌèâÍ∑†Î≥¥Îã§ ${scores.condition >= 80 ? "2-3Ï£º Îπ†Î¶Ñ" : "ÎπÑÏä∑Ìï®"}`,
          inquiries: `ÌèâÍ∑†Î≥¥Îã§ ${(vehicle.accident === "none" && scores.avgKmPerYear < 15000) ? "30-50% ÎßéÏùå" : "10-20% ÎßéÏùå"}`,
        },
        tip: (() => {
          if (vehicle.accident === "none" && scores.avgKmPerYear < 15000 && scores.condition >= 85) {
            return "ÌîÑÎ¶¨ÎØ∏ÏóÑÍ∏â Ï∞®ÎüâÏù¥ÏóêÏöî! ÏóîÏπ¥ ÎπÑÍµêÍ≤¨Ï†ÅÏúºÎ°ú ÏµúÍ≥†Í∞ÄÎ•º Î∞õÏùÑ Ïàò ÏûàÏñ¥Ïöî";
          } else if (vehicle.accident === "none" && scores.condition >= 80) {
            return "Î¨¥ÏÇ¨Í≥† Ï∞®ÎüâÏùÄ ÏãúÏû•ÏóêÏÑú ÌÅ∞ Í≤ΩÏüÅÎ†•Ïù¥ ÏûàÏñ¥Ïöî. ÏûêÏã†ÏûàÍ≤å ÌåêÎß§ÌïòÏÑ∏Ïöî";
          } else if (scores.condition >= 70) {
            return "ÌèâÍ∑† Ïù¥ÏÉÅÏù¥ÏóêÏöî. ÏóîÏπ¥ ÏÖÄÌîÑÏßÑÎã®ÏúºÎ°ú Ï†ïÌôïÌïú ÏãúÏÑ∏Î•º ÌôïÏù∏ÌïòÏÑ∏Ïöî";
          } else {
            return "Í∞úÏÑ† Ìè¨Ïù∏Ìä∏Î•º Î≥¥ÏôÑÌïòÎ©¥ Í≤ΩÏüÅÎ†•Ïù¥ ÌÅ¨Í≤å Ïò¨ÎùºÍ∞ÄÏöî";
          }
        })(),
      },
    };
  };
  
  const insights = getDetailedInsights();

  const styles = {
    card: {
      background: "white",
      padding: EncarSpacing.xl,
      borderRadius: EncarRadius.lg,
      boxShadow: EncarShadows.card,
      marginBottom: EncarSpacing.lg,
    },
    scoreCard: {
      padding: EncarSpacing.md,
      borderRadius: EncarRadius.lg,
      textAlign: "center" as const,
    },
  };

  return (
    <>
      {/* ÏóîÏπ¥ ÎπÖÎç∞Ïù¥ÌÑ∞ ÏßÑÎã® (ÌÜµÌï©) */}
      <div style={styles.card}>
        <h2 style={{
          fontSize: EncarFonts.size.large,
          fontWeight: EncarFonts.weight.bold,
          color: EncarColors.dark,
          marginBottom: EncarSpacing.lg,
          display: "flex",
          alignItems: "center",
          gap: EncarSpacing.sm,
        }}>
          <span>üîç</span>
          <span>ÏóîÏπ¥ ÎπÖÎç∞Ïù¥ÌÑ∞ ÏßÑÎã®</span>
          <span style={{
            fontSize: EncarFonts.size.tiny,
            fontWeight: EncarFonts.weight.regular,
            color: EncarColors.lightGray,
            marginLeft: "auto",
          }}>
            {vehicle.year}ÎÖÑÏãù {vehicle.model} {nf.format(ownerStats.totalOwners)}ÎåÄ Î∂ÑÏÑù
          </span>
        </h2>
        
        {/* ÏùòÏÇ¨Í≤∞Ï†ï 3Îã®Í≥Ñ (MECE) - Í∞ÑÍ≤∞ÌïòÍ≤å */}
        <div style={{ display: "grid", gridTemplateColumns: "repeat(3, 1fr)", gap: EncarSpacing.lg, marginBottom: EncarSpacing.lg, alignItems: "stretch" }}>
          {/* 1Ô∏è‚É£ ÎÇ¥ Ï∞® ÏÉÅÌÉú */}
          <div 
            onClick={() => toggleCard("condition")}
            style={{ 
              padding: EncarSpacing.xl,
              background: "white",
              borderRadius: EncarRadius.lg,
              border: `1px solid ${EncarColors.borderLight}`,
              cursor: "pointer",
              transition: "all 0.3s cubic-bezier(0.4, 0, 0.2, 1)",
              textAlign: "center",
              display: "flex",
              flexDirection: "column",
            }}
            onMouseEnter={(e) => {
              e.currentTarget.style.borderColor = EncarColors.primary;
              e.currentTarget.style.boxShadow = `0 8px 24px ${EncarColors.primary}20`;
              e.currentTarget.style.transform = "translateY(-2px)";
            }}
            onMouseLeave={(e) => {
              e.currentTarget.style.borderColor = EncarColors.borderLight;
              e.currentTarget.style.boxShadow = "none";
              e.currentTarget.style.transform = "translateY(0)";
            }}
          >
            <div style={{ fontSize: EncarFonts.size.tiny, color: EncarColors.lightGray, marginBottom: EncarSpacing.xs }}>
              ÎÇ¥ Ï∞® ÏÉÅÌÉú
            </div>
            <div style={{ fontSize: "48px", fontWeight: EncarFonts.weight.extrabold, color: EncarColors.primary, lineHeight: 1, marginBottom: EncarSpacing.xs }}>
              {scores.condition}
            </div>
            <div style={{ fontSize: EncarFonts.size.small, color: EncarColors.darkGray, fontWeight: EncarFonts.weight.semibold, marginBottom: EncarSpacing.sm }}>
              {scores.ranking}
            </div>
            <div style={{ 
              fontSize: EncarFonts.size.tiny, 
              color: EncarColors.primary, 
              fontWeight: EncarFonts.weight.semibold,
              textDecoration: "underline",
              paddingTop: EncarSpacing.xs,
              borderTop: `1px solid ${EncarColors.borderLight}`,
              marginBottom: EncarSpacing.sm,
            }}>
              {expandedCards.has("condition") ? "‚ñ≥ Ï†ëÍ∏∞" : "‚ñΩ ÏÉÅÏÑ∏Î≥¥Í∏∞"}
            </div>
            
            {/* ÏÉÅÏÑ∏ Ï†ïÎ≥¥ */}
            {expandedCards.has("condition") && (
              <div style={{ marginTop: EncarSpacing.md, paddingTop: EncarSpacing.md, borderTop: "1px solid #b7eb8f" }}>
                <div style={{ fontSize: EncarFonts.size.tiny, color: EncarColors.darkGray, marginBottom: EncarSpacing.sm, fontWeight: EncarFonts.weight.semibold }}>
                  {insights.condition.summary}
                </div>
                
                {/* Í∞Å Ïπ¥ÌÖåÍ≥†Î¶¨Î≥Ñ ÏÉÅÏÑ∏ ÌèâÍ∞Ä */}
                {insights.condition.categories.map((cat, idx) => (
                  <div key={idx} style={{ 
                    marginBottom: EncarSpacing.sm, 
                    padding: EncarSpacing.xs, 
                    background: cat.improvable ? "#fffbe6" : "#fafafa",
                    borderRadius: EncarRadius.sm,
                    border: cat.improvable ? "1px solid #ffd591" : "1px solid #f0f0f0",
                  }}>
                    <div style={{ display: "flex", justifyContent: "space-between", alignItems: "center", marginBottom: "2px" }}>
                      <span style={{ fontSize: "10px", fontWeight: EncarFonts.weight.bold, color: EncarColors.dark }}>
                        {cat.improvable && "‚ö°"} {cat.name}
                      </span>
                      <div style={{ display: "flex", gap: "4px", alignItems: "center" }}>
                        <span style={{ fontSize: "9px", padding: "1px 4px", background: cat.status === "ÏôÑÎ≤Ω" ? "#f6ffed" : cat.status === "Ïö∞Ïàò" || cat.status === "ÏñëÌò∏" ? "#e6f4ff" : "#fff1f0", color: cat.status === "ÏôÑÎ≤Ω" ? "#52c41a" : cat.status === "Ïö∞Ïàò" || cat.status === "ÏñëÌò∏" ? "#1677ff" : "#ff4d4f", borderRadius: "2px" }}>
                          {cat.status}
                        </span>
                        <span style={{ fontSize: "10px", color: cat.impact >= 0 ? "#52c41a" : "#ff4d4f", fontWeight: EncarFonts.weight.semibold }}>
                          {cat.impact > 0 ? "+" : ""}{cat.impact}Ï†ê
                        </span>
                      </div>
                    </div>
                    <div style={{ fontSize: "9px", color: EncarColors.lightGray, marginBottom: "2px" }}>
                      {cat.detail}
                    </div>
                    <div style={{ fontSize: "9px", color: cat.improvable ? EncarColors.primary : "#52c41a", fontWeight: EncarFonts.weight.medium }}>
                      {cat.improvable ? "üìç " : "‚úì "}{cat.howToImprove}
                    </div>
                  </div>
                ))}
                
                {/* Í∞úÏÑ† Í∞ÄÎä• Ï†êÏàò */}
                {insights.condition.totalImprovable > 0 && (
                  <div style={{ marginTop: EncarSpacing.sm, padding: EncarSpacing.xs, background: "#fff7e6", borderRadius: EncarRadius.sm, border: `2px solid ${EncarColors.primary}` }}>
                    <div style={{ fontSize: "10px", fontWeight: EncarFonts.weight.bold, color: EncarColors.primary, marginBottom: "2px" }}>
                      üéØ Í∞úÏÑ† Í∞ÄÎä•: ÏµúÎåÄ +{insights.condition.totalImprovable}Ï†ê
                    </div>
                    <div style={{ fontSize: "9px", color: EncarColors.dark }}>
                      Ïô∏Í¥Ä/ÌÉÄÏù¥Ïñ¥Î•º Ï†ïÎπÑÌïòÎ©¥ {scores.condition + insights.condition.totalImprovable}Ï†êÍπåÏßÄ Ïò¨Î¶¥ Ïàò ÏûàÏñ¥Ïöî
                    </div>
                  </div>
                )}
                
                {/* Ï∞®Îüâ ÌäπÌôî ÌåÅ */}
                <div style={{ marginTop: EncarSpacing.sm, padding: EncarSpacing.xs, background: "#e6f4ff", borderRadius: EncarRadius.sm }}>
                  <div style={{ fontSize: "9px", color: "#1677ff", lineHeight: 1.5 }}>
                    üí° <strong>{vehicle.year}ÎÖÑÏãù {vehicle.model} Í¥ÄÎ¶¨ ÌåÅ:</strong><br/>
                    {insights.condition.vehicleSpecificTip}
                  </div>
                </div>
              </div>
            )}
          </div>
          
          {/* 2Ô∏è‚É£ ÏòàÏÉÅ ÌåêÎß§Í∞Ä */}
          <div 
            onClick={() => toggleCard("value")}
            style={{ 
              padding: EncarSpacing.xl,
              background: "white",
              borderRadius: EncarRadius.lg,
              border: `1px solid ${EncarColors.borderLight}`,
              cursor: "pointer",
              transition: "all 0.3s cubic-bezier(0.4, 0, 0.2, 1)",
              textAlign: "center",
              display: "flex",
              flexDirection: "column",
            }}
            onMouseEnter={(e) => {
              e.currentTarget.style.borderColor = EncarColors.primary;
              e.currentTarget.style.boxShadow = `0 8px 24px ${EncarColors.primary}20`;
              e.currentTarget.style.transform = "translateY(-2px)";
            }}
            onMouseLeave={(e) => {
              e.currentTarget.style.borderColor = EncarColors.borderLight;
              e.currentTarget.style.boxShadow = "none";
              e.currentTarget.style.transform = "translateY(0)";
            }}
          >
            <div style={{ fontSize: EncarFonts.size.tiny, color: EncarColors.lightGray, marginBottom: EncarSpacing.xs }}>
              ÏòàÏÉÅ ÌåêÎß§Í∞Ä
            </div>
            <div style={{ fontSize: "40px", fontWeight: EncarFonts.weight.extrabold, color: EncarColors.primary, lineHeight: 1, marginBottom: "2px" }}>
              {nf.format(Math.round(timing.nowValue / 10000))}
            </div>
            <div style={{ fontSize: EncarFonts.size.small, color: EncarColors.darkGray, marginBottom: EncarSpacing.sm }}>
              ÌèâÍ∑† +{Math.round((timing.nowValue - timing.nowValue * 0.95) / 10000)}ÎßåÏõê
            </div>
            <div style={{ 
              fontSize: EncarFonts.size.tiny, 
              color: EncarColors.primary, 
              fontWeight: EncarFonts.weight.semibold,
              textDecoration: "underline",
              paddingTop: EncarSpacing.xs,
              borderTop: `1px solid ${EncarColors.borderLight}`,
              marginBottom: EncarSpacing.sm,
            }}>
              {expandedCards.has("value") ? "‚ñ≥ Ï†ëÍ∏∞" : "‚ñΩ ÏÉÅÏÑ∏Î≥¥Í∏∞"}
            </div>
            
            {/* ÏÉÅÏÑ∏ Ï†ïÎ≥¥ */}
            {expandedCards.has("value") && (
              <div style={{ marginTop: EncarSpacing.md, paddingTop: EncarSpacing.md, borderTop: `2px solid ${EncarColors.primary}30` }}>
                <div style={{ fontSize: EncarFonts.size.tiny, color: EncarColors.darkGray, marginBottom: EncarSpacing.sm, fontWeight: EncarFonts.weight.semibold }}>
                  {insights.valueRetention.summary}
                </div>
                {insights.valueRetention.breakdown.map((item, idx) => (
                  <div key={idx} style={{ marginBottom: EncarSpacing.xs }}>
                    <div style={{ display: "flex", justifyContent: "space-between", fontSize: "10px" }}>
                      <span style={{ color: EncarColors.darkGray }}>{item.label}</span>
                      <span style={{ color: EncarColors.dark, fontWeight: EncarFonts.weight.bold }}>
                        {nf.format(Math.round(item.value / 10000))}ÎßåÏõê
                      </span>
                    </div>
                    <div style={{ fontSize: "9px", color: EncarColors.lightGray }}>{item.detail}</div>
                  </div>
                ))}
                <div style={{ marginTop: EncarSpacing.sm, fontSize: "10px", color: EncarColors.primary }}>
                  üìä {insights.valueRetention.comparison}
                </div>
                <div style={{ marginTop: EncarSpacing.xs, padding: EncarSpacing.xs, background: `${EncarColors.primary}10`, borderRadius: EncarRadius.sm, fontSize: "10px", color: EncarColors.primary }}>
                  üí° {insights.valueRetention.improvement}
                </div>
              </div>
            )}
          </div>
          
          {/* 3Ô∏è‚É£ ÌåêÎß§ ÌÉÄÏù¥Î∞ç */}
          <div 
            onClick={() => toggleCard("market")}
            style={{ 
              padding: EncarSpacing.xl,
              background: "white",
              borderRadius: EncarRadius.lg,
              border: `1px solid ${EncarColors.borderLight}`,
              cursor: "pointer",
              transition: "all 0.3s cubic-bezier(0.4, 0, 0.2, 1)",
              textAlign: "center",
              display: "flex",
              flexDirection: "column",
            }}
            onMouseEnter={(e) => {
              e.currentTarget.style.borderColor = EncarColors.primary;
              e.currentTarget.style.boxShadow = `0 8px 24px ${EncarColors.primary}20`;
              e.currentTarget.style.transform = "translateY(-2px)";
            }}
            onMouseLeave={(e) => {
              e.currentTarget.style.borderColor = EncarColors.borderLight;
              e.currentTarget.style.boxShadow = "none";
              e.currentTarget.style.transform = "translateY(0)";
            }}
          >
            <div style={{ fontSize: EncarFonts.size.tiny, color: EncarColors.lightGray, marginBottom: EncarSpacing.xs }}>
              ÌåêÎß§ ÌÉÄÏù¥Î∞ç
            </div>
            <div style={{ 
              fontSize: "48px", 
              fontWeight: EncarFonts.weight.extrabold, 
              color: lifecycle.stage === "Next" ? "#ff4d4f" : lifecycle.stage === "Care" ? EncarColors.primary : lifecycle.stage === "Keep" ? EncarColors.success : EncarColors.info,
              lineHeight: 1,
              marginBottom: "2px",
            }}>
              {lifecycle.stage === "Next" ? "Ï†ÅÍ∏∞" : lifecycle.stage === "Care" ? "Ï¢ãÏùå" : lifecycle.stage === "Keep" ? "ÏñëÌò∏" : "ÏµúÏÉÅ"}
            </div>
            <div style={{ fontSize: EncarFonts.size.small, color: EncarColors.darkGray, marginBottom: EncarSpacing.sm }}>
              {Math.round(lifecycle.yearsOwned)}ÎÖÑÏ∞® ¬∑ {lifecycle.stage === "Next" ? "ÍµêÏ≤¥ Í∂åÏû•" : lifecycle.stage === "Care" ? "ÌåêÎß§ Í≤ÄÌÜ†" : lifecycle.stage === "Keep" ? "ÏïàÏ†ï Ïú†ÏßÄ" : "ÌîÑÎ¶¨ÎØ∏ÏóÑ"}
            </div>
            <div style={{ 
              fontSize: EncarFonts.size.tiny, 
              color: EncarColors.primary, 
              fontWeight: EncarFonts.weight.semibold,
              textDecoration: "underline",
              paddingTop: EncarSpacing.xs,
              borderTop: `1px solid ${EncarColors.borderLight}`,
              marginBottom: EncarSpacing.sm,
            }}>
              {expandedCards.has("market") ? "‚ñ≥ Ï†ëÍ∏∞" : "‚ñΩ ÏÉÅÏÑ∏Î≥¥Í∏∞"}
            </div>
            
            {/* ÏÉÅÏÑ∏ Ï†ïÎ≥¥ */}
            {expandedCards.has("market") && (
              <div style={{ marginTop: EncarSpacing.md, paddingTop: EncarSpacing.md, borderTop: `2px solid ${EncarColors.primary}30` }}>
                <div style={{ fontSize: EncarFonts.size.tiny, color: EncarColors.darkGray, marginBottom: EncarSpacing.sm, fontWeight: EncarFonts.weight.semibold }}>
                  {insights.marketCompetitiveness.summary}
                </div>
                
                {/* Í≤ΩÏüÅ Ïö∞ÏúÑ */}
                {insights.marketCompetitiveness.advantages.length > 0 && (
                  <div style={{ marginBottom: EncarSpacing.sm, padding: EncarSpacing.xs, background: "#f6ffed", borderRadius: EncarRadius.sm }}>
                    <div style={{ fontSize: "10px", fontWeight: EncarFonts.weight.bold, color: "#52c41a", marginBottom: "4px" }}>
                      Í∞ïÏ†ê
                    </div>
                    {insights.marketCompetitiveness.advantages.map((adv, idx) => (
                      <div key={idx} style={{ fontSize: "9px", color: "#52c41a", marginBottom: "2px" }}>
                        {adv}
                      </div>
                    ))}
                  </div>
                )}
                
                {/* Í∞úÏÑ†Ï†ê */}
                {insights.marketCompetitiveness.improvements.length > 0 && (
                  <div style={{ marginBottom: EncarSpacing.sm, padding: EncarSpacing.xs, background: "#fffbe6", borderRadius: EncarRadius.sm }}>
                    <div style={{ fontSize: "10px", fontWeight: EncarFonts.weight.bold, color: "#faad14", marginBottom: "4px" }}>
                      Í∞úÏÑ† Í∞ÄÎä•
                    </div>
                    {insights.marketCompetitiveness.improvements.map((imp, idx) => (
                      <div key={idx} style={{ fontSize: "9px", color: EncarColors.dark, marginBottom: "2px" }}>
                        {imp}
                      </div>
                    ))}
                  </div>
                )}
                
                {/* ÌèâÍ∑† ÎåÄÎπÑ */}
                <div style={{ marginBottom: EncarSpacing.sm, padding: EncarSpacing.xs, background: "#e6f4ff", borderRadius: EncarRadius.sm }}>
                  <div style={{ fontSize: "10px", fontWeight: EncarFonts.weight.bold, color: "#1677ff", marginBottom: "4px" }}>
                    ÌèâÍ∑† ÎåÄÎπÑ
                  </div>
                  <div style={{ fontSize: "9px", color: "#1677ff", display: "flex", flexDirection: "column", gap: "2px" }}>
                    <div>üí∞ ÌåêÎß§Í∞Ä: {insights.marketCompetitiveness.vsAverage.price}</div>
                    <div>‚è±Ô∏è ÌåêÎß§ ÏÜçÎèÑ: {insights.marketCompetitiveness.vsAverage.sellTime}</div>
                    <div>üëÄ Î¨∏Ïùò: {insights.marketCompetitiveness.vsAverage.inquiries}</div>
                  </div>
                </div>
                
                {/* ÌåÅ */}
                <div style={{ padding: EncarSpacing.xs, background: "#fff7e6", borderRadius: EncarRadius.sm, border: `2px solid ${EncarColors.primary}` }}>
                  <div style={{ fontSize: "10px", color: EncarColors.primary, lineHeight: 1.5 }}>
                    üí° {insights.marketCompetitiveness.tip}
                  </div>
                </div>
              </div>
            )}
          </div>
        </div>
        
        {/* ÏóîÏπ¥Î¥á ÏùòÍ≤¨ (ÌÜµÌï©) */}
        <div style={{
          padding: EncarSpacing.xl,
          background: "white",
          borderRadius: EncarRadius.lg,
          border: `1px solid ${EncarColors.borderLight}`,
          position: "relative",
          display: "flex",
          flexDirection: "column",
          minHeight: "200px",
        }}>
          <div style={{ 
            fontSize: EncarFonts.size.small, 
            fontWeight: EncarFonts.weight.bold, 
            color: EncarColors.dark,
            marginBottom: EncarSpacing.sm,
            display: "flex",
            alignItems: "center",
            gap: EncarSpacing.xs,
          }}>
            <span style={{ fontSize: "24px" }}>ü§ñ</span>
            <span>ÏóîÏπ¥Î¥á ÏùòÍ≤¨</span>
          </div>
          <div style={{ fontSize: EncarFonts.size.small, color: EncarColors.darkGray, lineHeight: 1.7, marginBottom: EncarSpacing.lg, flex: 1 }}>
            {(() => {
              const currentMonthlyRate = lifecycle.stage === "Trust" ? 0.8 :
                                          lifecycle.stage === "Keep" ? 1.0 :
                                          lifecycle.stage === "Care" ? 1.5 : 2.0;
              const futureMonthlyRate = lifecycle.stage === "Trust" ? 0.8 :
                                         lifecycle.stage === "Keep" ? 1.2 :
                                         lifecycle.stage === "Care" ? 1.8 : 2.5;
              
              const currentMonth = new Date().getMonth() + 1;
              const isSummerOrWinter = currentMonth >= 11 || currentMonth <= 2 || (currentMonth >= 5 && currentMonth <= 8);
              
              const avgPrice = Math.round(timing.nowValue / 10000);
              const encarBonus = 5;
              
              // Ï¢ÖÌï© ÏùòÍ≤¨ ÏÉùÏÑ± (ÏñëÏã¨Ï†ÅÏù¥Îêò ÎÑõÏßÄ Ìè¨Ìï®)
              if (lifecycle.stage === "Next") {
                return `${vehicle.year}ÎÖÑÏãù ${vehicle.model}Îäî ÌòÑÏû¨ Ïõî ${currentMonthlyRate}%Ïî© Í∞êÍ∞Ä Ï§ëÏù¥Î©∞, ${futureMonthlyRate}%Î°ú Í∞ÄÏÜçÎê† ÏãúÍ∏∞ÏûÖÎãàÎã§. ${isSummerOrWinter ? "ÏãúÏû• ÏàòÏöîÎèÑ ÎÜíÏùÄ ÏãúÏ†êÏù¥Í≥†" : "ÎπÑÏàòÍ∏∞ÏßÄÎßå"}, Ïú†ÏÇ¨ Ï∞®Îüâ ${ownerStats.totalOwners}ÎåÄ Î∂ÑÏÑù Í≤∞Í≥º ÌèâÍ∑† ${nf.format(avgPrice)}ÎßåÏõêÏóê Í±∞ÎûòÎêòÍ≥† ÏûàÏäµÎãàÎã§. Ïª®ÎîîÏÖò(${scores.condition}Ï†ê)Í≥º ÏãúÏû• ÏÉÅÌô©ÏùÑ Ï¢ÖÌï©ÌïòÎ©¥, ${Math.round(lifecycle.yearsOwned)}ÎÖÑÍ∞Ñ Ï∂©Î∂ÑÌûà ÌÉÄÏÖ®Í≥† Îã§Ïùå Îã®Í≥ÑÎ•º Í≥†ÎØºÌïòÏã§ ÏãúÏ†êÏûÖÎãàÎã§. ÏóîÏπ¥ ÎπÑÍµêÍ≤¨Ï†ÅÏúºÎ°ú ÌèâÍ∑† +${encarBonus}% ÎÜíÏùÄ Í∞ÄÍ≤©ÏùÑ Î∞õÏúºÏã§ Ïàò ÏûàÍ≥†, Îã§Ïùå Ï∞®ÎüâÎèÑ Ìï®Íªò ÎëòÎü¨Î≥¥ÏãúÎ©¥ Ï¢ãÏùÑ Í≤É Í∞ôÏïÑÏöî.`;
              } else if (lifecycle.stage === "Care") {
                return `${vehicle.year}ÎÖÑÏãù ${vehicle.model}Îäî ÌòÑÏû¨ Ïõî ${currentMonthlyRate}%Ïî© Í∞êÍ∞Ä Ï§ëÏù¥Î©∞, Ìñ•ÌõÑ ${futureMonthlyRate}%Î°ú ÏÉÅÏäπÌï† Í∞ÄÎä•ÏÑ±Ïù¥ ÏûàÏäµÎãàÎã§. ${isSummerOrWinter ? "ÌòÑÏû¨ ÏãúÏû• ÏàòÏöîÍ∞Ä ÎÜíÏïÑ" : "ÏãúÏû• ÏàòÏöîÎäî ÌèâÍ∑† ÏàòÏ§ÄÏù¥ÏßÄÎßå"} Ïú†ÏÇ¨ Ï∞®ÎüâÏùÄ ÌèâÍ∑† ${nf.format(avgPrice)}ÎßåÏõêÏóê Í±∞Îûò Ï§ëÏûÖÎãàÎã§. Ïª®ÎîîÏÖò(${scores.condition}Ï†ê)Ïù¥ ÏñëÌò∏ÌïòÎØÄÎ°ú Í¥ÄÎ¶¨ÌïòÎ©∞ Ï°∞Í∏à Îçî ÌÉÄÏÖîÎèÑ Í¥úÏ∞ÆÏßÄÎßå, ÏÉà Ï∞®Í∞Ä Í∂ÅÍ∏àÌïòÏãúÎã§Î©¥ ÏßÄÍ∏àÎèÑ ÎÇòÏÅòÏßÄ ÏïäÏùÄ ÌÉÄÏù¥Î∞çÏù¥ÏóêÏöî. ÏóîÏπ¥ ÏÖÄÌîÑÏßÑÎã®ÏúºÎ°ú Ï†ïÌôïÌïú ÏãúÏÑ∏ ÌôïÏù∏Ìï¥Î≥¥ÏÑ∏Ïöî.`;
              } else if (lifecycle.stage === "Keep") {
                return `${vehicle.year}ÎÖÑÏãù ${vehicle.model}Îäî Ïõî ${currentMonthlyRate}%Ïî© ÏôÑÎßåÌïòÍ≤å Í∞êÍ∞Ä Ï§ëÏù¥Î©∞, Ìñ•ÌõÑÏóêÎèÑ ${futureMonthlyRate}% ÏàòÏ§ÄÏùÑ Ïú†ÏßÄÌï† Ï†ÑÎßùÏûÖÎãàÎã§. ${isSummerOrWinter ? "ÏãúÏû• ÏàòÏöîÎèÑ ÏïàÏ†ïÏ†ÅÏù¥Í≥†" : "ÎπÑÏàòÍ∏∞ÏßÄÎßå Í∞ÄÍ≤© Î∞©Ïñ¥Í∞Ä Ïûò ÎêòÎäî ÏãúÍ∏∞Ïù¥Î©∞"}, ÌòÑÏû¨ Ïª®ÎîîÏÖò(${scores.condition}Ï†ê)ÎèÑ Ïö∞ÏàòÌï©ÎãàÎã§. Ï†ïÍ∏∞ Ï†êÍ≤ÄÎßå Ïûò ÌïòÏãúÎ©¥ Í∞ÄÏπòÎ•º Ïò§Îûò Ïú†ÏßÄÌï† Ïàò ÏûàÏñ¥Ïöî. Îã§Îßå ${Math.round(lifecycle.yearsOwned)}ÎÖÑ ÌÉÄÏÖ®ÏúºÎãà ÎùºÏù¥ÌîÑÏä§ÌÉÄÏùºÏù¥ Î∞îÎÄåÏÖ®Í±∞ÎÇò ÏÉà Ï∞®Í∞Ä ÌïÑÏöîÌïòÏãúÎã§Î©¥, ${isSummerOrWinter ? "ÏßÄÍ∏àÎèÑ" : "Îã§Ïùå ÏÑ±ÏàòÍ∏∞Ïóê"} Í≥†Î†§Ìï¥Î≥¥ÏÖîÎèÑ Ï¢ãÏïÑÏöî.`;
              } else {
                return `${vehicle.year}ÎÖÑÏãù ${vehicle.model}Îäî Ïõî ${currentMonthlyRate}%Ïùò ÎÇÆÏùÄ Í∞êÍ∞ÄÏú®ÏùÑ Î≥¥Ïù¥Îäî Ïã†Ï∞®Í∞ê ÏãúÍ∏∞ÏûÖÎãàÎã§. ${isSummerOrWinter ? "ÏãúÏû• ÏàòÏöîÎèÑ ÌôúÎ∞úÌïòÍ≥†" : "ÎπÑÏàòÍ∏∞ÏßÄÎßå"}, ÌòÑÏû¨ Ïª®ÎîîÏÖò(${scores.condition}Ï†ê)Ïù¥ ÏµúÏÉÅÍ∏âÏù¥ÎØÄÎ°ú ÎãπÎ∂ÑÍ∞Ñ ÏïàÏã¨ÌïòÍ≥† ÌÉÄÏÖîÎèÑ Îê©ÎãàÎã§. Îã§Îßå Í∞ÄÏ°± Íµ¨ÏÑ±Ïù¥ Î∞îÎÄåÏÖ®Í±∞ÎÇò Îçî ÌÅ∞/ÏûëÏùÄ Ï∞®Í∞Ä ÌïÑÏöîÌïòÏãúÎã§Î©¥, ÏßÄÍ∏à ÎÜíÏùÄ Í∞ÄÍ≤©Ïóê ÌåîÍ≥† Î∞îÍæ∏ÏãúÎäî Í≤ÉÎèÑ Ï¢ãÏùÄ ÏÑ†ÌÉùÏù¥ÏóêÏöî. ÏóîÏπ¥ÏóêÏÑú Îã§Ïùå Ï∞®ÎüâÎèÑ Ìï®Íªò Ï∞æÏïÑÎ≥¥ÏÑ∏Ïöî.`;
              }
            })()}
          </div>
          
          {/* ÏóîÏπ¥ ÌîÑÎ¶¨ÎØ∏ÏóÑ Ï†ïÎ≥¥ + ÎπÑÍµêÍ≤¨Ï†Å Î≤ÑÌäº - Ïª¥Ìå©Ìä∏ Î†àÏù¥ÏïÑÏõÉ */}
          <div style={{ 
            display: "flex", 
            alignItems: "center",
            justifyContent: "space-between",
            padding: `${EncarSpacing.sm} ${EncarSpacing.md}`,
            background: `linear-gradient(135deg, ${EncarColors.primary}08 0%, ${EncarColors.primary}03 100%)`,
            borderRadius: EncarRadius.md,
            border: `1px solid ${EncarColors.primary}20`,
            marginTop: EncarSpacing.md,
            gap: EncarSpacing.sm,
          }}>
            <div style={{ 
              fontSize: EncarFonts.size.medium, 
              color: EncarColors.darkGray,
              display: "flex",
              alignItems: "center",
              gap: EncarSpacing.xs,
              flex: 1,
            }}>
              üí° ÏóîÏπ¥Î°ú ÌåîÎ©¥ <span style={{ color: EncarColors.primary, fontWeight: EncarFonts.weight.bold }}>+{Math.round((timing.nowValue * 0.08) / 10000)}ÎßåÏõê Îçî Î∞õÏùÑ Ïàò ÏûàÏñ¥Ïöî!</span> <span style={{ fontSize: EncarFonts.size.small, color: EncarColors.gray }}>(1,234Î™ÖÏù¥ Ïù¥ÎØ∏ ÌôïÏù∏ÌñàÏñ¥Ïöî)</span>
            </div>
            <button
              id="encar-premium-box"
              onClick={() => {
                const floatingComparison = document.querySelector('[data-service="comparison"]');
                if (floatingComparison) {
                  (floatingComparison as HTMLElement).style.animation = 'bounce-highlight 0.5s 3';
                  setTimeout(() => {
                    (floatingComparison as HTMLElement).scrollIntoView({ behavior: 'smooth', block: 'center' });
                  }, 100);
                }
              }}
              style={{
                padding: `${EncarSpacing.xs} ${EncarSpacing.md}`,
                background: `linear-gradient(135deg, ${EncarColors.primary} 0%, ${EncarColors.primary}dd 100%)`,
                color: "white",
                border: "none",
                borderRadius: EncarRadius.md,
                fontSize: EncarFonts.size.small,
                fontWeight: EncarFonts.weight.extrabold,
                cursor: "pointer",
                transition: "all 0.3s",
                boxShadow: `0 2px 8px ${EncarColors.primary}30`,
                animation: "pulse-glow-btn 2s infinite",
                whiteSpace: "nowrap",
                flexShrink: 0,
              }}
              onMouseEnter={(e) => {
                e.currentTarget.style.transform = "scale(1.05)";
                e.currentTarget.style.boxShadow = `0 4px 16px ${EncarColors.primary}50`;
              }}
              onMouseLeave={(e) => {
                e.currentTarget.style.transform = "scale(1)";
                e.currentTarget.style.boxShadow = `0 2px 8px ${EncarColors.primary}30`;
              }}
            >
              ÏóîÏπ¥ ÎπÑÍµêÍ≤¨Ï†ÅÏúºÎ°ú ÏßÄÍ∏à Î∞îÎ°ú ÏµúÍ≥†Í∞Ä Î∞õÍ∏∞
            </button>
          </div>
          
          <style>{`
            @keyframes pulse-glow-btn {
              0%, 100% {
                box-shadow: 0 2px 8px ${EncarColors.primary}30;
              }
              50% {
                box-shadow: 0 4px 20px ${EncarColors.primary}60, 0 0 30px ${EncarColors.primary}40;
              }
            }
          `}</style>
        </div>
      </div>
    </>
  );
}

